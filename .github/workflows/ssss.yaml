name: SSSS

on:
  push:
    branches:
      - main
    paths:
      - 'ssss/**'
      - '.github/workflows/ssss.yaml'
  # pull_request:
  #   branches:
  #     - main
  #   paths:
  #     - 'ssss/**'
  #     - '.github/workflows/ssss.yaml'

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  lint:
    defaults:
      run:
        working-directory: ./ssss
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install tools
        run: rustup component add rustfmt clippy

      - name: Run rustfmt
        run: cargo fmt --check

      - name: Run cargo clippy
        run: cargo clippy --all --profile test -- -D clippy::dbg_macro

  test:
    defaults:
      run:
        working-directory: ./ssss
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run cargo test
        run: cargo test --all -- --skip store::aws

  pack:
    defaults:
      run:
        working-directory: ./ssss
    strategy:
      fail-fast: true
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-musl
            tag: amd64
          # - runner: macos-latest-large
          #   target: aarch64-unknown-linux-musl
          #   tag: arm64
    runs-on: ${{ matrix.platform.runner }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:ssss"
          build-args: |
            TARGET=${{ matrix.platform.target }}
          tags: |
            ghcr.io/escrin/ssss:${{ github.sha }}-${{ matrix.platform.tag }}
            ghcr.io/escrin/ssss:latest-${{ matrix.platform.tag }}
          push: true
          cache-from: type=registry,ref=ghcr.io/escrin/ssss:latest-${{ matrix.platform.tag }}
          cache-to: type=inline
